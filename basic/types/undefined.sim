#
  Copyright (C) 2020 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License, version 2, or
  (at your option) under the terms of the GNU Lesser General Public License,
  version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser (Library) General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files LGPLv2.txt and LGLPv3.txt or
  http://www.gnu.org/licenses/lgpl-2.0.html
  http://www.gnu.org/licenses/lgpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

{
  <kind type>
  <name types::undefined>
  <node SIMPLE_NODE>

  // the pototype for the <undefined> object

  RUNTIME_ERROR("Attempt to call an undefined value as a function!")
}

{
  <kind object>
  <name std::undefined>
  <type types::undefined>
  <scope global>

  // the undefined object
  //
  // The undfined object is the only object that is **not** derived from
  // <types::object>!
  //
  // Accessing an attribute of an undefined object raises an error instead of
  // returning <undefined>. This prevents endless recursion during an attempt to
  // traverse an undefined structure.
  //
  // Be very carefull when defining methods or attributes for <types::undefined>.
}

$types::undefined.is_defined false # obvious
$types::undefined.is_undefined true # obvious

$types::undefined/equal:
  #
    is only equal to itself
  (
    _left
    right
  )
  -> right.is_undefined

$types::undefined/default_value:
  #
    returns the *default*
  (
    _self
    default
  )
  -> default

{
  <kind function>

  long types::undefined/debug_string(NODE *node, int indent, int max_depth, char *buf) {
    return debug_print(indent, buf, "undefined");
  }
}

register_deserializer "undefined": (text _base_indent) -> text undefined
