#
  Copyright (C) 2020 by
  Dipl.-Ing. Michael Niederle

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU Library General Public License, version 2, or
  (at your option) under the terms of the GNU Lesser General Public License,
  version 3.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU Lesser (Library) General Public License for more details.

  For details of the GNU General Public License see the accompanying
  files LGPLv2.txt and LGLPv3.txt or
  http://www.gnu.org/licenses/lgpl-2.0.html
  http://www.gnu.org/licenses/lgpl-3.0.html
  or write to the
  Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, US

#
  Platform Hierarchy

  all
    |
    +-- posix
    |   |
    |   +-- bsd
    |   |
    |   +-- cygwin
    |   |
    |   +-- darwin
    |   |
    |   +-- linux
    |
    +-- win

$std::operating_system
  #
    returns a string describing the operating system

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      hardware_architecture, c_compiler, CPPFLAGS, LDFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(OS))
  }

$std::hardware_architecture
  #
    returns a string describing the hardware architecture

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, c_compiler, CPPFLAGS, LDFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(ARCHITECTURE))
  }

$std::c_compiler
  #
    returns a string describing the default C-compiler

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, hardware_architecture, CPPFLAGS, LDFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(CC))
  }

$std::CPPFLAGS
  #
    returns a string describing the default C preprocessor flags

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, hardware_architecture, c_compiler, LDFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(CPPFLAGS))
  }

$std::LDFLAGS
  #
    returns a string describing the default linker flags

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, hardware_architecture, c_compiler, CPPFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(LDFLAGS))
  }

$std::PREFIX
  #
    returns a string describing the compiler's installation prefix

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    The default value, if not configured otherwise, is "/usr/local".

    Topic: Platform

    See also:
      operating_system, hardware_architecture, c_compiler, CPPFLAGS,
      current_directory_separator, current_path_separator
  {
    CHECK_ARGUMENTS(0)
    RETURN_SINGLE_RESULT(from_c_string(PREFIX))
  }

$std::current_directory_separator
  #
    returns a string describing the current directory separator

    The directory separator separates the components of a directory path
    (e.g. "\" for Windows, "/" for POSIX).

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, hardware_architecture, c_compiler, CPPFLAGS, LDFLAGS,
      current_path_separator
  :
    if
      operating_system() == "win"
      -> '\'
      -> '/'

$std::current_path_separator
  #
    returns a string describing the current path separator

    The path separator separates multiple pathes (e.g. ":" for Windows,
    ";" for POSIX).

    This information is retrieved and stored during the installation of the
    Simplicity runtime (while running the configure-script).

    Topic: Platform

    See also:
      operating_system, hardware_architecture, c_compiler, CPPFLAGS, LDFLAGS,
      current_directory_separator
  :
    if
      operating_system() == "win"
      -> ';'
      -> ':'
