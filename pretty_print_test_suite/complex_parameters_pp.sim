if
  action == "simrun":
    if command_line_arguments.is_empty: Error "Missing command line arguments!"
    !input_filename command_line_arguments(1)
  :
    program_parameters
      # the following options act on a single file only

      !compiler::do_check_only
      -> "check-only" "
	do not compile; just check for syntax errors
      !compiler::do_dump_trees
      -> "dump-trees" "
	dump abstract syntax trees
      !compiler::do_pretty_print
      -> "pretty-print" "
	do not compile; just pretty print the source file
      !compiler::do_print_simplified_source
      -> "print-simplified-source" "
	do not generate a C-file; just print the simplified source text
      !do_print_c
      -> "print-c" "
	print C source code for a single module
      !do_time_passes
      -> "time-passes" "
	print running time for the individual compiler passes
      !module_prefix
      -> VALUED_OPTION "module-prefix" "
	needed to compile a single file within a subdirectory;
	if the subdirectories are nested use slashes to separate
	the directory names

      # the following options change the diagnostic output

      !compiler::do_show_brief_messages
      -> "brief" "
	show brief error messages
      !compiler::do_print_warnings
      -> "warnings" "
	show warning messages
      !compiler::do_print_missing
      -> "missing" "
	inform about missing documentation
      !compiler::do_print_summary
      -> "summary" "
	show a statistical summary
      !compiler::verbose
      -> "verbose" "
	output verbose informations
      !compiler::do_show_debug_infos
      -> "debug" "
	show C-compiler and linker calls
      !compiler::do_show_compiler_debug_infos
      -> "debug-compiler" "
	show internal debug messages of the Simplicity compiler

      # the following options create meta-informations

      !do_build_codeblocks_project
      -> "codeblocks" "
	create Code::Blocks project
      !do_extract_documentation
      -> "extract-documentation" "
	extract documentation encoded as HTML
      !do_list_dependencies
      -> "list-dependencies" "
	list all dependencies

      # the following options influence the build process for all modules

      !do_rebuild
      -> "rebuild" "
	rebuild all source files
      !do_omit_meta
      -> "omit-meta" "
	do not rebuild meta files
      !do_build_static
      -> "static" "
	create statically linked executable
      !do_link_profiler
      -> "profile" "
	link with libprofiler
      !input_filename
      -> std::MANDATORY_PARAMETER "filename" "
	the name of the source file or directory to compile
      !additional_libraries
      -> std::SOME_PARAMETERS "additional_libraries" "
	the names of additional libraries (used for --extract-documentation)
